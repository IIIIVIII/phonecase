{"ast":null,"code":"var _jsxFileName = \"/Users/mingfanxie/Desktop/phonecasefron/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = styled.section`\n    padding: 80px 20px;\n    background: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    text-align: center;\n    min-height: 60vh;\n`;\n_c = Section;\nconst Title = styled.h2`\n    font-size: 2rem;\n    letter-spacing: 0.2rem;\n`;\n_c2 = Title;\nconst Button = styled.button`\n    margin-top: 20px;\n    padding: 10px 20px;\n    background: ${props => props.theme.colors.accent};\n    color: ${props => props.theme.colors.text};\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1rem;\n    letter-spacing: 0.1rem;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\n_c3 = Button;\nconst ProductGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    gap: 20px;\n    margin-top: 40px;\n`;\n_c4 = ProductGrid;\nconst ProductCard = styled(motion.div)`\n  border: 1px solid ${props => props.theme.colors.text};\n  padding: 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c5 = ProductCard;\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  // 封装获取产品列表的函数，便于重复调用\n  const fetchProducts = () => {\n    axios.get('http://localhost:8081/api/products').then(response => {\n      setProducts(response.data);\n    }).catch(error => console.error('Error fetching products:', error));\n  };\n\n  // 组件挂载时获取产品列表\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // 生成测试数据的函数\n  const generateTestData = async () => {\n    // 可以自定义你想要的测试产品数组\n    const testData = [{\n      name: 'Neon Case',\n      description: 'Bright neon phonecase with glowing edges',\n      price: 15.99,\n      stock: 50\n    }, {\n      name: 'Marble Case',\n      description: 'Stylish marble pattern phonecase',\n      price: 25.49,\n      stock: 30\n    }, {\n      name: 'Carbon Fiber Case',\n      description: 'Lightweight carbon fiber design',\n      price: 29.99,\n      stock: 20\n    }, {\n      name: 'Floral Case',\n      description: 'Colorful floral pattern, perfect for spring',\n      price: 12.99,\n      stock: 100\n    }, {\n      name: 'Retro Case',\n      description: 'Vintage 80s design with vibrant colors',\n      price: 19.99,\n      stock: 40\n    }];\n    try {\n      // 逐个POST到后端\n      for (let product of testData) {\n        await axios.post('http://localhost:8081/api/products', product);\n      }\n      // 重新获取产品列表\n      fetchProducts();\n      alert('Test data generated successfully!');\n    } catch (error) {\n      console.error('Error generating test data:', error);\n      alert('Failed to generate test data. Check console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    id: \"shop\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Featured Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateTestData,\n      children: \"Generate Test Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductGrid, {\n      children: products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this) : products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", product.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c6 = ProductList;\nexport default ProductList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"ProductGrid\");\n$RefreshReg$(_c5, \"ProductCard\");\n$RefreshReg$(_c6, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","styled","motion","jsxDEV","_jsxDEV","Section","section","props","theme","colors","background","text","_c","Title","h2","_c2","Button","button","accent","_c3","ProductGrid","div","_c4","ProductCard","_c5","ProductList","_s","products","setProducts","fetchProducts","get","then","response","data","catch","error","console","generateTestData","testData","name","description","price","stock","product","post","alert","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","initial","opacity","animate","transition","duration","_c6","$RefreshReg$"],"sources":["/Users/mingfanxie/Desktop/phonecasefron/src/components/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nconst Section = styled.section`\n    padding: 80px 20px;\n    background: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    text-align: center;\n    min-height: 60vh;\n`;\n\nconst Title = styled.h2`\n    font-size: 2rem;\n    letter-spacing: 0.2rem;\n`;\n\nconst Button = styled.button`\n    margin-top: 20px;\n    padding: 10px 20px;\n    background: ${props => props.theme.colors.accent};\n    color: ${props => props.theme.colors.text};\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1rem;\n    letter-spacing: 0.1rem;\n    &:hover {\n        opacity: 0.8;\n    }\n`;\n\nconst ProductGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    gap: 20px;\n    margin-top: 40px;\n`;\n\nconst ProductCard = styled(motion.div)`\n  border: 1px solid ${props => props.theme.colors.text};\n  padding: 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nfunction ProductList() {\n    const [products, setProducts] = useState([]);\n\n    // 封装获取产品列表的函数，便于重复调用\n    const fetchProducts = () => {\n        axios.get('http://localhost:8081/api/products')\n            .then(response => {\n                setProducts(response.data);\n            })\n            .catch(error => console.error('Error fetching products:', error));\n    };\n\n    // 组件挂载时获取产品列表\n    useEffect(() => {\n        fetchProducts();\n    }, []);\n\n    // 生成测试数据的函数\n    const generateTestData = async () => {\n        // 可以自定义你想要的测试产品数组\n        const testData = [\n            {\n                name: 'Neon Case',\n                description: 'Bright neon phonecase with glowing edges',\n                price: 15.99,\n                stock: 50\n            },\n            {\n                name: 'Marble Case',\n                description: 'Stylish marble pattern phonecase',\n                price: 25.49,\n                stock: 30\n            },\n            {\n                name: 'Carbon Fiber Case',\n                description: 'Lightweight carbon fiber design',\n                price: 29.99,\n                stock: 20\n            },\n            {\n                name: 'Floral Case',\n                description: 'Colorful floral pattern, perfect for spring',\n                price: 12.99,\n                stock: 100\n            },\n            {\n                name: 'Retro Case',\n                description: 'Vintage 80s design with vibrant colors',\n                price: 19.99,\n                stock: 40\n            }\n        ];\n\n        try {\n            // 逐个POST到后端\n            for (let product of testData) {\n                await axios.post('http://localhost:8081/api/products', product);\n            }\n            // 重新获取产品列表\n            fetchProducts();\n            alert('Test data generated successfully!');\n        } catch (error) {\n            console.error('Error generating test data:', error);\n            alert('Failed to generate test data. Check console for details.');\n        }\n    };\n\n    return (\n        <Section id=\"shop\">\n            <Title>Featured Products</Title>\n\n            {/* 生成测试数据的按钮 */}\n            <Button onClick={generateTestData}>\n                Generate Test Data\n            </Button>\n\n            <ProductGrid>\n                {products.length === 0 ? (\n                    <p>No products available.</p>\n                ) : (\n                    products.map(product => (\n                        <ProductCard\n                            key={product.id}\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            transition={{ duration: 0.5 }}\n                        >\n                            <h3>{product.name}</h3>\n                            <p>${product.price}</p>\n                            <p>Stock: {product.stock}</p>\n                        </ProductCard>\n                    ))\n                )}\n            </ProductGrid>\n        </Section>\n    );\n}\n\nexport default ProductList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}